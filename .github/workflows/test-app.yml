name: Build and Test

on:
  push:
    branches: [ main ]

jobs:

  app-dev:
    name: Build and test the app
    runs-on: ubuntu-latest
    env: 
      PORT: 8000
      HOST: 127.0.0.1
      TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
      DB_ROOT_USER: devroot
      DB_ROOT_PASSWORD: devroot
      DB_USER: usertest
      DB_PASSWORD: passtest
      DB_NAME: bookishDBtest
      DB_PORT: 27017
      DB_HOST: 127.0.0.1
      DB_CONFIG: "./config/.docker"
      DB_INIT: "./config/.docker/docker-entrypoint-initdb.d/"
      DB_DATA: "./config/.docker/mongo-volume"
      DB_URI: "mongodb://usertest:passtest@db:27017/bookishDBtest"
      SWAGGER_PORT: 80
      SWAGGER_DIR: "./config/.swagger/"
      SWAGGER_API_URL: "doc/openapi_doc.yaml"
      REDOC_PORT: 8082
      REDOC_DIR: "./config/.redoc"
      REDOC_SRC: "./config/.redoc/src"
      REDOC_CONF: "./config/.redoc/config/nginx.conf"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build docker images 
        run: docker-compose -f docker-compose.dev.yml build --no-cache
      - name: Start containers 
        run: docker-compose -f docker-compose.dev.yml up -d app
      - name: Check running containers
        run: docker ps -a
      - name: Check logs of database
        run: docker logs mongodb
      - name: Run test
        run: docker exec bookish_node_dev sh -c "npm test && npm run lint"

